% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_exctract.R
\name{auto_extract}
\alias{auto_extract}
\title{Extract Plot-Level Information from Field Trial Images}
\usage{
auto_extract(
  path_rgb = NULL,
  path_dsm = NULL,
  area_of_interest,
  plot_shape,
  plot_shape_crop,
  indices = c("NGRDI", "BGI", "GLI"),
  index_mask = "HUE",
  mask_above = TRUE,
  threshold = 0,
  time = NULL,
  plot_id = NULL,
  save_plots = FALSE,
  save_masked_plots = FALSE,
  time_serie = FALSE,
  trial_name = "test",
  path_out = NULL,
  subset = NULL,
  red = 1,
  green = 2,
  blue = 3,
  rededge = NULL,
  nir = NULL,
  index_no_mask = "GLI"
)
}
\arguments{
\item{path_rgb}{Character. Path to the directory containing RGB images (GeoTIFF format).}

\item{path_dsm}{Character (optional). Path to the directory containing DSM images (GeoTIFF format). Required for canopy height and volume calculations.}

\item{area_of_interest}{`sf` or `Spatial` object. Defines the region of interest for analysis.}

\item{plot_shape}{`sf` or `Spatial` object. Shapefile defining the experimental plots.}

\item{plot_shape_crop}{`sf` or `Spatial` object (optional). Cropped shapefile for experimental plots. Defaults to `plot_shape`.}

\item{indices}{Character vector. Vegetation indices to calculate. Default is `c("NGRDI", "BGI", "GLI")`.}

\item{index_mask}{Character. Index used for soil masking. Default is `"HUE"`.}

\item{mask_above}{Logical. If `TRUE`, masks areas with values above the threshold; otherwise, masks below. Default is `TRUE`.}

\item{threshold}{Numeric. Threshold value for soil masking. Must be provided.}

\item{time}{Character vector. Timestamps corresponding to each image in `path_rgb`.}

\item{plot_id}{Character (optional). Column name in `plot_shape` representing unique plot identifiers.}

\item{save_plots}{Logical. If `TRUE`, saves individual plot-level images for each date. Default is `FALSE`.}

\item{save_masked_plots}{Logical. If `TRUE`, saves soil-masked plot-level images for each date. Default is `FALSE`.}

\item{time_serie}{Logical. If `TRUE`, generates time-series plots. Default is `FALSE`.}

\item{trial_name}{Character. Name of the trial for naming output files. Default is `"HARS22_chips"`.}

\item{path_out}{Character. Directory path where output files will be saved.}

\item{subset}{Numeric. Index with positions to subset images in path_rgb and path_dsm.}

\item{red}{Integer between 1 and number of layers. Layer to use as the Red channel.}

\item{green}{Integer between 1 and number of layers. Layer to use as the Green channel.}

\item{blue}{Integer between 1 and number of layers. Layer to use as the Blue channel.}

\item{rededge}{Integer between 1 and number of layers. Layer to use as the RedEdge channel.}

\item{nir}{Integer between 1 and number of layers. Layer to use as the NIR channel.}

\item{index_no_mask}{Character. Calculates a vegetation index without masking. Default is `"GLI"`.}
}
\value{
A list containing:
  \item{dt}{A data frame with extracted metrics for each plot across all dates.}
  \item{info}{A data frame with metadata about the images processed.}
}
\description{
This function processes and analyzes images from field trials to extract plot-level data, including vegetation indices, canopy cover, and other metrics. It supports images collected over time and optionally includes DSM data for calculating canopy height and volume.
}
\details{
The function performs the following steps:
1. Reads and processes RGB and optionally DSM images.
2. Applies soil masking using the specified index and threshold.
3. Calculates vegetation indices and extracts plot-level data.
4. Optionally calculates canopy height and volume using DSM data.
5. Saves extracted data and optional visualizations to the specified output directory.
}
\examples{
\dontrun{
auto_extract(
  path_rgb = "path/to/rgb/images",
  path_dsm = "path/to/dsm/images",
  area_of_interest = aoi_sf,
  plot_shape = plots_sf,
  indices = c("NGRDI", "BGI"),
  time = c("2023-05-01", "2023-06-01"),
  threshold = 0.2,
  path_out = "output/directory"
)
}

}
