% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_elevation.R
\name{align_write_dsms}
\alias{align_write_dsms}
\title{Align and write DSM rasters using ground-control points}
\usage{
align_write_dsms(path_in, path_out, gc_points, times, pattern = "\\\\.tif$")
}
\arguments{
\item{path_in}{`character(1)`. Directory containing input DSM rasters.}

\item{path_out}{`character(1)`. Output directory where adjusted rasters
will be written. Created recursively if it does not exist.}

\item{gc_points}{`character(1)`. Path to a vector file readable by
[sf::read_sf()] containing **point** features for ground control.
Must include a unique identifier column named `ID`.}

\item{times}{`character()` or `numeric()`. A vector of time labels
(e.g., acquisition times or survey indices) with **length equal to the
number of DSM files** matched by `pattern`. The first element is treated
as the baseline.}

\item{pattern}{`character(1)`. Regular expression used by [base::list.files()]
to find input rasters (default `\\.tif$`).}
}
\value{
A `list` with components:
\itemize{
  \item `files_in` — full paths to the input rasters.
  \item `times` — the time labels provided.
  \item `baseline` — the baseline time label.
  \item `offsets` — a data frame with columns `Time` and `offset`
    (mean baseline minus current).
  \item `out_dir` — normalized output directory path.
  \item `plot` — a length-2 list of ggplot objects: before/after alignment.
}
}
\description{
Aligns a time series of DSM (Digital Surface Model) rasters by estimating
per-time vertical offsets from ground-control (GC) points, writes the
adjusted rasters to disk, and returns a summary (including diagnostic plots).
}
\details{
For each raster in `path_in`, values are extracted at GC point locations
(`gc_points`). Using the first element of `times` as the baseline time,
the function computes, for every other time, the mean difference
\eqn{E[DSM_\mathrm{baseline} - DSM_t]} over GC points that have non-NA
baseline values. Each raster is then shifted by its estimated offset and
written to `path_out` with the original file name.

Two ggplot objects are returned to help diagnose alignment:
a "Before" plot (raw DSM at GC points over time) and an "After" plot
(offset-adjusted DSM at GC points over time).
}
\section{Assumptions}{

\itemize{
  \item Each raster is a **single-layer** DSM.
  \item The GC points layer contains a unique identifier column named `ID`.
  \item The length of `times` matches the number of raster files found by
    `list.files(path_in, pattern)`.
}
}

\section{Output files}{

One adjusted GeoTIFF per input file is written to `path_out` with
the same base file name. Existing files are overwritten.
}

\examples{
\dontrun{
library(terra)
library(sf)
library(dplyr)
library(ggplot2)

# Inputs
in_dir  <- "data/dsm_raw"
out_dir <- "data/dsm_aligned"
gcp     <- "data/ground_control.gpkg"  # must have column ID

# Time labels (first is baseline)
tvec <- c("2025-06-01", "2025-06-10", "2025-06-20")

res <- align_write_dsms(
  path_in   = in_dir,
  path_out  = out_dir,
  gc_points = gcp,
  times     = tvec,
  pattern   = "\\\\.tif$"
)

# Inspect offsets and plots
res$offsets
res$plot[[1]]  # before
res$plot[[2]]  # after
}

}
\seealso{
[terra::rast()], [terra::extract()], [sf::read_sf()], [ggplot2::ggplot]
}
